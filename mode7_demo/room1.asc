// room script file

struct Vec3 {
  float x, y, z;
};

float current_speed;

float turn_speed = 1.4;
float max_speed_forward = 4.0;
float max_speed_forward_road = 4.0;
float max_speed_forward_dirt = 2.0;
float max_speed_backward = 2.0;

int timer, ground_frame;

// kart
Vec3 kart_position;
float kart_angle;

DynamicSprite* zones;
DrawingSurface* zones_ds;
int current_zone;
int zone_road = -1, zone_dirt = 41600, zone_wall = 21151;

float abs(float x) {
  if (x < 0.0) return -x;
  return x;
}

Mode7World m7;

void input() {
  
  // steer kart
  float factor;
  float max_factor = 1.5;
  if (current_speed == 0.0) factor = 0.0;
  else factor = 0.9 * max_speed_forward / current_speed;
  if (factor > max_factor) factor = max_factor;
  if (factor < -max_factor) factor = -max_factor;
  if (IsKeyPressed(eKeyA)) kart_angle -= turn_speed * factor;
  if (IsKeyPressed(eKeyD)) kart_angle += turn_speed * factor;
  
  // move kart
  float sin = Maths.Sin(Maths.DegreesToRadians(kart_angle));
  float cos = Maths.Cos(Maths.DegreesToRadians(kart_angle));

  float target_speed = 0.0;
  if (IsKeyPressed(eKeyW) && !IsKeyPressed(eKeyS)) {
    target_speed = max_speed_forward;
  }
  if (IsKeyPressed(eKeyS) && !IsKeyPressed(eKeyW)) {
    if (current_speed <= 0.4) target_speed = -max_speed_backward;
  }
  current_speed += (target_speed - current_speed) * 0.05;
  if (current_speed > -0.1 && current_speed < 0.1) current_speed = 0.0;
  
  kart_position.x += current_speed * sin;
  kart_position.z -= current_speed * cos;
}

void processPlayerShip() {
  // zone
  int w = Game.SpriteWidth[zones.Graphic];
  int h = Game.SpriteHeight[zones.Graphic];
  int x = FloatToInt(kart_position.x, eRoundNearest) + w / 2;
  int y = FloatToInt(kart_position.z, eRoundNearest) + h / 2;
  current_zone = zone_road;
  if (x >= 0 && x < w && y >= 0 && y < h) current_zone = zones_ds.GetPixel(x, y);
  if (current_zone == zone_dirt) {
    max_speed_forward = max_speed_forward_dirt;
    if (current_speed != 0.0) {
      int step = FloatToInt(max_speed_forward / abs(current_speed), eRoundNearest) + 3;
      if (step != 0 && (timer % step) < step/2) kart_position.y = 0.5;
      else kart_position.y = 0.0;
    }
  }
  else {
    kart_position.y = 0.0;
    max_speed_forward = max_speed_forward_road;
  }
  
  m7.Objects[0].SetPosition(kart_position.x, kart_position.y, kart_position.z);
}  

void drawSplashes()
{
  if (current_speed > 0.0 && current_zone == zone_dirt) {
    DrawingSurface* ds = m7.Screen.GetDrawingSurface();
    
    ds.DrawImage(m7.Objects[0].ScreenX, m7.Objects[0].ScreenY, 24, 0, m7.Objects[0].ScreenWidth, m7.Objects[0].ScreenHeight);
    ds.Release();
  }
}

// room events

function room_Load()
{
  // show FPS
  Debug(4, 1);
    
  kart_position.x = 372.0;
  kart_position.z = 185.0;
  m7.AddObject(372, 185, 0.36, 27);
  
  int zones_slot = 23;
  
  // zone sprite
  zones = DynamicSprite.CreateFromExistingSprite(zones_slot);
  zones_ds = zones.GetDrawingSurface();
  
  m7.SetViewscreen(0, 0, 320, 180);
  m7.SetBgColor(13823);
  m7.SetSkyColor(12255);
  
  m7.SetCamera(0.0, 25.0, 0.0, 0.0, 0.0, 175.0);
  
}

function room_AfterFadeIn() {
  for(int i=0; i<16; i++)
  {
    m7.AddObject(Random(350), -Random(150), 0.4, 65);
  }
  
  m7.SetGroundSprite(43);
  m7.SetHorizonSprite(64);
}

// Clouds: ansimuz - Sunnyland
// Water: zabin - The Battle for Wesnoth Water
// Ship: helianthus games - FREE pixel art Viking ship 16 directions

function room_RepExec()
{
  timer++;
  if (timer == 48) timer = 0;

  if(timer%3 == 0) {
    ground_frame++;
    if(ground_frame > 20) ground_frame = 0;
    m7.SetGroundSprite(43+ground_frame);
  }

  input();
  
  processPlayerShip();
  
  m7.TargetCamera(kart_position.x, kart_position.y, kart_position.z, kart_angle);
  m7.Objects[0].Angle = kart_angle;
  
  m7.UpdateObjects();
  
  // determine kart sprite
  int kart_sprite = m7.GetAngleObjectAndCamera(0) / 22;
  if (kart_sprite <= 0) {
    kart_sprite = 27 - kart_sprite;
  } else {
    kart_sprite = 43 - kart_sprite;
  }        
  
  m7.Objects[0].Graphic = kart_sprite; 
  
  m7.Draw();
  drawSplashes();
  m7.DrawObjects();
  
  gScreen.BackgroundGraphic = m7.Screen.Graphic;
}

void on_key_press(eKeyCode k) {
  m7.DebugKeyPress(k);
  
}
